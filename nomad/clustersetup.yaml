heat_template_version: 2014-10-16

#
# you can deploy this template using the following command:
# 'openstack stack create -t clustersetup.yaml -e clustersetup-env.yaml <stack_name>'
#
# after successful stack creation you can login with 
# ssh -A -l <yourUser> <servicehostIP> 
# From there you can jump to any of your nodes. An example:
# 'ssh lb0.node.consul'
#

description: A template to deploy and configure a loadbalanced server setup.

parameters:
  number_nodes: 
    type: string
    default: 4
  number_dbservers: 
    type: string
    default: 3
  number_servicehosts: 
    type: string
    default: 1
  public_network_id:
    type: string
  flavor_lb:
    type: string
    default: m1.micro
  flavor_appserver:
    type: string
    default: m1.micro
  flavor_dbserver:
    type: string
    default: m1.micro
  flavor_servicehost:
    type: string
    default: m1.micro
  image: 
    type: string
  ssh_keys:
    type: comma_delimited_list
  name_prefix:
    type: string
    default: nomad

resources:
  syseleven_net:
    type: OS::Neutron::Net
    properties: 
      name: { list_join: ['-', [{ get_param: name_prefix }, 'network']] }

  syseleven_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ syseleven_net ]
    properties:
      name: { list_join: ['-', [{ get_param: name_prefix }, 'subnet']] }
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: syseleven_net}
      ip_version: 4
      cidr: 192.168.2.0/24
      allocation_pools:
      - {start: 192.168.2.10, end: 192.168.2.250}

  syseleven_router:
    type: OS::Neutron::Router
    depends_on: [ syseleven_subnet ]
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }}

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ syseleven_router ]
    properties:
      router_id: { get_resource: syseleven_router }
      subnet: { get_resource: syseleven_subnet }

  ### LB Node as resource group ###
  #######################
  lb_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: 1 
      resource_def: 
        type: lb.yaml
        properties:
          name: { list_join: ['-', [{ get_param: name_prefix }, loadbalancer%index%]] }
          image: { get_param: image }
          flavor: { get_param: flavor_lb }
          syseleven_net: { get_resource: syseleven_net }
          public_network_id: { get_param: public_network_id }
          ssh_keys: { get_param: ssh_keys }

  ### Appserver nodes as resource group ###
  #######################
  appserver_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: { get_param: number_nodes } 
      resource_def: 
        type: server.yaml
        properties:
          name: { list_join: ['-', [{ get_param: name_prefix }, node%index%]] }
          flavor: { get_param: flavor_appserver }
          image: { get_param: image }
          syseleven_net: { get_resource: syseleven_net }
          ssh_keys: { get_param: ssh_keys }

  ### Service node as resource group ###
  #######################
  servicehost_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: { get_param: number_servicehosts } 
      resource_def: 
        type: servicehost.yaml
        properties:
          name: { list_join: ['-', [{ get_param: name_prefix }, servicehost%index%]] }
          flavor: { get_param: flavor_servicehost }
          image: { get_param: image }
          syseleven_net: { get_resource: syseleven_net }
          public_network_id: { get_param: public_network_id }
          ssh_keys: { get_param: ssh_keys }

  ### DBserver Nodes as resource group ###
  #######################
  dbserver_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: { get_param: number_dbservers } 
      resource_def: 
        type: dbserver.yaml
        properties:
          name: { list_join: ['-', [{ get_param: name_prefix }, db%index%]] }
          flavor: { get_param: flavor_dbserver }
          image: { get_param: image }
          syseleven_net: { get_resource: syseleven_net }
          ssh_keys: { get_param: ssh_keys }
